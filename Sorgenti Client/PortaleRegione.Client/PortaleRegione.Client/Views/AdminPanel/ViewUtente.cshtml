@model PortaleRegione.Client.Models.ViewUtenteModel

@{
    ViewBag.Title = Model.Persona.DisplayName;
    var backUrl = Url.Action("RiepilogoUtenti");
}

<script>
    $(document).ready(function() {
        $('#btnSearch').hide();
    });
</script>

<div class="row">
    <div class="col l1 s2">
        <a class="btn-floating waves-effect waves-light grey header-back" onclick="go('@backUrl')">
            <i class="material-icons">arrow_back</i>
        </a>
    </div>
    <div class="col l11 s10">
        <h5>
            <b>
                <span>@ViewBag.Title</span>
            </b>
        </h5>
    </div>
</div>
<div class="row">
    <div class="col s12">
        @using (Html.BeginForm("SalvaPersona", "AdminPanel", FormMethod.Post, new { id = "formPersona" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-group">
                @Html.LabelFor(s => s.Persona.UID_persona)
                @Html.TextBoxFor(s => s.Persona.UID_persona, new { @class = "form-control" })
            </div>

            <div class="form-group">
                @Html.LabelFor(s => s.Persona.cognome)
                @Html.TextBoxFor(s => s.Persona.cognome, new { @class = "form-control" })
            </div>

            <div class="form-group">
                @Html.LabelFor(s => s.Persona.nome)
                @Html.TextBoxFor(s => s.Persona.nome, new { @class = "form-control" })
            </div>

            <div class="form-group">
                @Html.LabelFor(s => s.Persona.email)
                @Html.TextBoxFor(s => s.Persona.email, new { @class = "form-control" })
            </div>

            <div class="form-group">
                @Html.LabelFor(s => s.Persona.foto)
                @Html.TextBoxFor(s => s.Persona.foto, new { @class = "form-control" })
            </div>

            <div class="form-group">
                @Html.LabelFor(s => s.Persona.userAD)
                @Html.TextBoxFor(s => s.Persona.userAD, new { @class = "form-control" })
            </div>

            <div class="form-group">
                <p>
                    <label>
                        <input id="No_Cons" name="No_Cons" type="checkbox" value="true"
                               @Html.Raw(Convert.ToBoolean(Model.Persona.No_Cons) ? "" : "checked=\"checked\"")>
                        <span>@Html.LabelFor(s => s.Persona.No_Cons)</span>
                    </label>
                </p>
            </div>

            <div class="form-group">
                @Html.LabelFor(s => s.Persona.Gruppo)
                @Html.TextBoxFor(s => s.Persona.Gruppo.nome_gruppo, new { @class = "form-control" })
            </div>

            var notifica_Firma = Model.Persona.notifica_firma.HasValue ? Model.Persona.notifica_firma.Value : false;

            <div class="form-group">
                <p>
                    <label>
                        <input id="notifica_firma" name="notifica_firma" type="checkbox" value="true"
                               @Html.Raw(notifica_Firma ? "" : "checked=\"checked\"")>
                        <span>@Html.LabelFor(s => s.Persona.notifica_firma)</span>
                    </label>
                </p>
            </div>
            
            var notifica_Deposito = Model.Persona.notifica_deposito.HasValue ? Model.Persona.notifica_deposito.Value : false;
            
            <div class="form-group">
                <p>
                    <label>
                        <input id="notifica_deposito" name="notifica_deposito" type="checkbox" value="true"
                               @Html.Raw(notifica_Deposito ? "checked=\"checked\"":"")>
                        <span>@Html.LabelFor(s => s.Persona.notifica_deposito)</span>
                    </label>
                </p>
            </div>

            var attivo = Model.Persona.attivo.HasValue ? Model.Persona.attivo.Value : false;

            <div class="form-group">
                <p>
                    <label>
                        <input id="attivo" name="attivo" type="checkbox" value="true"
                               @Html.Raw(attivo ? "checked=\"checked\"":"")>
                        <span>@Html.LabelFor(s => s.Persona.attivo)</span>
                    </label>
                </p>
            </div>
            
            var eliminato = Model.Persona.deleted.HasValue ? Model.Persona.deleted.Value : false;

            <div class="form-group">
                <p>
                    <label>
                        <input id="deleted" name="deleted" type="checkbox" value="true"
                               @Html.Raw(eliminato ? "checked=\"checked\"":"")>
                        <span>@Html.LabelFor(s => s.Persona.deleted)</span>
                    </label>
                </p>
            </div>
            <div class="row">
                @foreach (var gruppiAD in Model.GruppiAD)
                {
                    var classCss = gruppiAD.IsRuolo ? "light-blue lighten-5" : "lime lighten-5";
                    <div class="col s3">
                        <div class="card @classCss">
                            <div class="card-content">
                                <p>
                                    <label>
                                        <input id="gruppiAD" name="gruppiAD" type="checkbox" value="true"
                                               @Html.Raw(gruppiAD.Membro ? "checked=\"checked\"" : "")>
                                        <span></span>
                                    </label>
                                </p>
                                <p class="truncate">@gruppiAD.GruppoAD</p>
                            </div>
                        </div>
                    </div>
                }
            </div>
            
        }
    </div>
</div>